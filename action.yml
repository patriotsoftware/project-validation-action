name: 'Project Validation'
description: 'Run Sonar and Tests to Validate Quality'

inputs:
  github-repo-name:
    description: 'GitHub repo name'
    required: true
    default: ''
  sonar-tool-version:
    description: 'Sonar tool version'
    required: false
    default: '5.13.0'
  use-dependencies:
    description: 'Use Docker to run dependencies.'
    required: false
    default: false
  docker-compose-file-path:
    description: 'Path to docker compose file to start dependencies'
    required: false
    default: 'docker-compose/test-dependencies-compose.yml'
  github-token:
    description: 'Github Token'
    required: true
  sonar-token:
    description: 'Sonar Token'
    required: true
  aws-access-key-id:
    description: 'AWS Access Key ID'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true
  path-to-repo-root:
    description: 'Path to Repo Root'
    required: false
    default: ''
  upload-sonar-results:
    description: 'Whether to upload Sonar results as an artifact'
    required: false
    default: true
    
runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Java Install
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Dotnet Sonar Scanner Install
      run: |
        if dotnet tool list -g | grep -q sonarscanner; then
          echo "Sonar Scanner Already Installed"
        else
          dotnet tool install --global dotnet-sonarscanner --version ${{inputs.sonar-tool-version}}
          echo "Sonar Scanner now installed."
        fi
      shell: bash

    - name: Dotnet Coverage Install
      run: | 
        if dotnet tool list -g | grep -q dotnet-coverage; then
          echo "Dotnet Coverage Already Installed"
        else
          dotnet tool install -g dotnet-coverage
          echo "Dotnet Coverage now installed."
        fi
      shell: bash
        
    - name: Containerized Dependencies
      if: ${{ inputs.use-dependencies == true && inputs.path-to-repo-root  == ''}}
      run: |
        echo "Running docker compose"
        docker-compose -f ${{inputs.docker-compose-file-path}} up -d
      shell: bash

    - name: Containerized Dependencies with Path
      if: ${{ inputs.use-dependencies == true &&  inputs.path-to-repo-root != ''}}
      run: |
        echo "Running docker compose"
        PATH_TO_REPO_ROOT='${{ inputs.path-to-repo-root }}' docker-compose -f ${{inputs.docker-compose-file-path}} up -d
      shell: bash

    - name: Sonarqube Run
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }} 
      run: |
        export PATH=$PATH:$HOME/.dotnet/toolse
        export SONAR_PROJECT="SynergyDataSystems_${{ inputs.github-repo-name }}"
        dotnet sonarscanner begin /k:$SONAR_PROJECT /d:sonar.scm.revision=$GITHUB_SHA /d:sonar.token=${{ inputs.sonar-token }} /d:sonar.host.url=https://sonar.dev-internal.patriotsoftware.com /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.verbose=false
      shell: bash

    - name: Project Build
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }} 
      run: dotnet build  
      shell: bash
      
    - name: Run Tests and Code Coverage
      env:
        AWS_ACCOUNT_ID: '305628290583'
        AWS_REGION: 'us-east-1'
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        GITHUB_TOKEN: ${{ inputs.github-token }} 
      run: |        
        echo "running dotnet tests and code coverage....."
        dotnet tool update -g dotnet-coverage
        export PATH=$PATH:$HOME/.dotnet/tools
        . ~/.bashrc
        dotnet-coverage collect 'dotnet test --logger "trx;LogFileName=test-results.trx" --configuration Release --verbosity minimal --collect "Code Coverage" --filter TestCategory!="Smoke" --settings:test/local.runsettings' -f xml  -o 'coverage.xml'
      shell: bash

    - name: Sonarqube end
      run: |
        export PATH=$PATH:$HOME/.dotnet/tools
        . ~/.bashrc
        dotnet sonarscanner end /d:sonar.token="${{inputs.sonar-token }}"
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      shell: bash

    - name: Where Am I
      run: |
        echo "List Files/Directories"
        ls
      shell: bash

    - uses: actions/upload-artifact@v3
      if: ${{ inputs.upload-sonar-results == true }}
      with:
        name: sonar-report
        path: .sonarqube/out/.sonar/report-task.txt

    - name: Output Docker Container Logs
      uses: jwalton/gh-docker-logs@v2
      if: ${{ inputs.use-dependencies  == true && always() }}

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Project Validation Test Results            
        path: test/**/TestResults/**/test-results.trx
        reporter: dotnet-trx

    - name: Stop Containerized Dependencies
      if: ${{ inputs.use-dependencies  == true && always() }}
      run: |
        echo "Stopping Docker Containers"
        docker-compose -f ${{inputs.docker-compose-file-path}} down -v --remove-orphans
      shell: bash

    - name: SonarQube Code Coverage Results
      run: |
        export BRANCH_NAME=${GITHUB_REF#refs/heads/} 
        export REPO_NAME=${{ env.github-repo-name }}
        echo "SonarQube Code Coverage Results: https://sonar.dev-internal.patriotsoftware.com/dashboard?branch=$BRANCH_NAME&id=SynergyDataSystems_$REPO_NAME"
      shell: bash
