name: 'Project Validation'
description: 'Run Sonar and Tests to Validate Quality'

inputs:
  sonar-project-name:
    description: 'Project name in Sonar'
    required: true
    default: ''
  sonar-tool-version:
    description: 'Sonar tool version'
    required: false
    default: '5.8.0'
  use-dependencies:
    description: 'Use Docker to run dependencies.'
    required: false
    default: 'false'
  docker-compose-file-path:
    description: 'Path to docker compose file to start dependencies'
    required: false
    default: 'docker-compose/test-dependencies-compose.yml'
  github-token:
    description: 'Github Token'
    required: true
  sonar-token:
    description: 'Sonar Token'
    required: true
  aws-access-key-id:
    description: 'AWS Access Key ID'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true
  path-to-repo-root:
    description: 'Path to Repo Root'
    required: false
    default: ''
    
runs:
  using: 'composite'
  steps:

    - name: Install dotnet Tools
      run: |
        if dotnet tool list -g | grep -q sonarscanner; then
          echo "Sonar Scanner Already Installed"
        else
          dotnet tool install --global dotnet-sonarscanner --version ${{inputs.sonar-tool-version}}
          echo "Sonar Scanner now installed."
        fi
      shell: bash
        
    - name: Start Containerized Dependencies
      if: (inputs.use-dependencies == 'true') && (inputs.path-to-repo-root == '')
      run: |
        echo "Running docker compose"
        docker-compose -f ${{inputs.docker-compose-file-path}} up -d
      shell: bash

    - name: Start Containerized Dependencies with Path
      if: (inputs.use-dependencies == 'true') && (inputs.path-to-repo-root != '')
      run: |
        echo "Running docker compose"
        PATH_TO_REPO_ROOT='${{ inputs.path-to-repo-root }}' docker-compose -f ${{inputs.docker-compose-file-path}} up -d
      shell: bash

    - name: Sonarqube Run
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }} 
      run: |
        export PATH=$PATH:$HOME/.dotnet/tools
        dotnet sonarscanner begin /k:"${{ inputs.sonar-project-name }}" /d:sonar.login=${{ inputs.sonar-token }} /d:sonar.host.url=https://sonar.dev-internal.patriotsoftware.com /d:sonar.cs.vscoveragexml.reportsPaths=test/**/TestResults/**/*.xml
      shell: bash

    - name: Run Tests
      env:
        AWS_ACCOUNT_ID: '305628290583'
        AWS_REGION: 'us-east-1'
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
      run: |
        echo "running dotnet tests....."
        export PATH=$PATH:$HOME/.dotnet/tools
        dotnet test --logger 'trx;LogFileName=test-results.trx' --configuration Release --verbosity minimal --collect "Code Coverage" --filter TestCategory!='Smoke' --settings:test/local.runsettings
      shell: bash

    - name: Sonarqube end
      run: |
        export PATH=$PATH:$HOME/.dotnet/tools
        . ~/.bashrc
        dotnet sonarscanner end /d:sonar.login="${{inputs.sonar-token }}"
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      shell: bash

    - name: Output Docker Container Logs
      uses: jwalton/gh-docker-logs@v2
      if: inputs.use-dependencies == 'true' && always()

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Project Validation Test Results            
        path: test/**/TestResults/**/test-results.trx
        reporter: dotnet-trx

    - name: Stop Containerized Dependencies
      if: inputs.use-dependencies == 'true' && always()
      run: |
        echo "Stopping Docker Containers"
        docker-compose -f ${{inputs.docker-compose-file-path}} down -v --remove-orphans
      shell: bash